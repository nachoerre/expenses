{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","newclasses","className","children","ExpensesFilter","value","selected","onChange","e","onSaveFilteredYear","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3b684a11.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css'\r\n\r\nconst Card = (props) => {\r\n  const newclasses = 'card ' + props.className;\r\n  return <div className={newclasses}>{props.children}</div>;\r\n  \r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const pickedYear = (e) => {\r\n        props.onSaveFilteredYear(e.target.value)\r\n    }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={pickedYear}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString('en-EN', {month:'long'});\r\n  const day = props.date.toLocaleString('en-EN', {day:'2-digit'});\r\n  const year = props.date.getFullYear();\r\n  return(\r\n    <div className=\"expense-date\">\r\n        <div className=\"expense-date__day\">{day}</div>\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\"expense-date__year\">{year}</div>\r\n      </div>\r\n  )\r\n\r\n}\r\n\r\nexport default ExpenseDate","import React from 'react';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">â‚¬{props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\nexport default ExpenseItem;","import React from 'react';\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport './ExpensesList.css';\r\n\r\n\r\n\r\nconst ExpensesList = (props) => {\r\n\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;","import React from \"react\";\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div \r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ChartBar;","import React from \"react\";\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues); // the spread operator pull out the array elements and add them as stand-alone arguments\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label} \r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = props => {\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 },\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); //starting at 0 => Jan = 0\r\n        chartDataPoints[expenseMonth].value += expense.amount\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\n\r\nimport Card from \"../UI/Card\";\r\nimport './Expenses.css';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const saveFilteredYearHandler = (year) => {\r\n    setFilteredYear(year);\r\n  }\r\n\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter selected={filteredYear} onSaveFilteredYear={saveFilteredYearHandler} />\r\n      <ExpensesChart expenses={filteredExpenses}/>\r\n      <ExpensesList items={filteredExpenses} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Expenses;","import React, { useState } from \"react\";\r\nimport './ExpenseForm.css'\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  const titleChangeHandler = (e) => {\r\n    setEnteredTitle(e.target.value);\r\n  };\r\n  const amountChangeHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n  };\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate)\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n  \r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input \r\n            type='text' \r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler} \r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input \r\n            type='number' min=\"0.01\" step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler} \r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input \r\n            type='date' min=\"2019-01-01\" max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler} \r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n};\r\n\r\nexport default ExpenseForm;","import React, { useState } from \"react\";\r\nimport './NewExpense.css';\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString()\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  }\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  }\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n      {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\r\n    </div> \r\n  )\r\n};\r\n\r\nexport default NewExpense;","import React, { useState } from 'react';\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses items={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}